# source from https://dipankarmedh1.medium.com/real-time-object-detection-with-yolo-and-webcam-enhancing-your-computer-vision-skills-861b97c78993
from ultralytics import YOLO
import cv2
import math
import time
from threading import Thread
import importlib.util
# start webcam
cap = cv2.VideoCapture(0)
#cap.set(3, 640)
#cap.set(4, 480)
cap.set(3, 600)
cap.set(4, 800)
# model
model = YOLO("best_10Aug.pt")
#model = YOLO("best.pt")
# object classes
classNames = ["container", "corner-cast-hole"]

#classNames = ["person", "bicycle", "car", "motorbike", "aeroplane", "bus", "train", "truck", "boat","traffic light", "fire hydrant", "stop sign", "parking meter", "bench", "bird", "cat", "dog", "horse", "sheep", "cow", "elephant", "bear", "zebra", "giraffe", "backpack", "umbrella","handbag", "tie", "suitcase", "frisbee", "skis", "snowboard", "sports ball", "kite", "baseball bat", "baseball glove", "skateboard", "surfboard", "tennis racket", "bottle", "wine glass", "cup", "fork", "knife", "spoon", "bowl", "banana", "apple", "sandwich", "orange", "broccoli", "carrot", "hot dog", "pizza", "donut", "cake", "chair", "sofa", "pottedplant", "bed", "diningtable", "toilet", "tvmonitor", "laptop", "mouse", "remote", "keyboard", "cell phone", "microwave", "oven", "toaster", "sink", "refrigerator", "book", "clock", "vase", "scissors", "teddy bear", "hair drier", "toothbrush"]
# Start a timer and frame counter
start_time = time.time()
frame_count = 0




while True:
    success, img = cap.read()
    #results = model(img, stream=True)
    results = model.predict(img, conf = 0.10 )

    # Read each frame
    ret, frame = cap.read()
    if not ret:
        break

    
    # Display the frame (optional)
    cv2.imshow('Video Stream', frame)

    # Increment the frame counter
    frame_count += 1


# Release the # coordinates
    for r in results:
        boxes = r.boxes

        for box in boxes:
            # bounding box
            x1, y1, x2, y2 = box.xyxy[0]
            x1, y1, x2, y2 = int(x1), int(y1), int(x2), int(y2) # convert to int values

            # put box in cam
            cv2.rectangle(img, (x1, y1), (x2, y2), (255, 0, 255), 3)

            # confidence
            confidence = math.ceil((box.conf[0]*100))/100
            print("Confidence --->",confidence)

            # class name
            cls = int(box.cls[0])
            print("Class name -->", classNames[cls])

            # object details
            org = [x1, y1]
            org1 = [x1-40, y1]
            font = cv2.FONT_HERSHEY_SIMPLEX
            fontScale = 0.5
            color = (255, 0, 0)
            thickness = 1

            cv2.putText(img, classNames[cls], org, font, fontScale, color, thickness)
            cv2.putText(img, str(confidence), org1, font, fontScale, color, thickness)
           
      # Calculate FPS every 1 second
    if time.time() - start_time >= 1:
        fps = frame_count / (time.time() - start_time)
        print(f"FPS: {fps}")
        frame_count = 0
        start_time = time.time()
        cv2.putText(img,'FPS: {0:.2f}'.format(fps),(20,30),cv2.FONT_HERSHEY_SIMPLEX,0.6,(255,255,0),1,cv2.LINE_AA) 

    # Exit on 'q' key press
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

 

cap.release()
cv2.destroyAllWindows()
